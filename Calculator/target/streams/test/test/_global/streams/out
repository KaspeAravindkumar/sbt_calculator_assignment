[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(com.knoldus.calculatorImplementation.StartCalculatorTest, org.scalatest.tools.Framework$$anon$1@173e42be, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(com.knoldus.calculator.CalculatorTest, org.scalatest.tools.Framework$$anon$1@173e42be, false, [SuiteSelector])[0m
[0m[[0m[0minfo[0m] [0m[0m[32mStartCalculatorTest:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mStartCalculator[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should read input values[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should subtract[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should multiply[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should divide[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not divide[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should give power of the value[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should give absolute number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should gives the remainder value[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not gives the remainder value[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should give maximum value[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should give maximum value of[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should give both are equal[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should give minimum value[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should give minimum value of[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should give equal[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mCalculatorTest:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mIf we add two positive number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should also give positive value[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mIf we add two negative numbers[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should give negative value[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mIf we add one positive and one negative number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should add those numbers[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mIf we add any number with zero[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should give the number itself[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mIf we add equal values[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should give double of the number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mIf we subtract two numbers[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should give the subtracted value[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mIf we subtract any number with zero[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should give the number itself[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mIf we subtract zero with any number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should give negative number of that number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mIf we subtract two negative numbers[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should give subtracted value of the numbers[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mIf we subtract one positive number and one negative number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should give added value[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mIf we multiply two numbers[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should give multiplied value[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mIf we multiply a number a number with zero[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should give zero[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mmultiply one positive and one negative number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should give negative value[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mnumber[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not divide by zero[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mdivision of two positive number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should be positive value[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mzero divide with any number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should be zero[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mnumber[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not calculate modulus if denominator is zero[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mmodulus[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should be calculated if denominator is not zero[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mfirst number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should be returned if it is greater[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32msecond number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should be returned if it is greater[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mfor equal numbers[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return both are equal[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mfirst number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should be returned if it is smaller[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32msecond number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should be returned if it is smaller[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mfor equal numbers[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return equal[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mpower[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should be calculated for two numbers[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32many number power zero[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should one[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32many number power one[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should be same number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mnegative number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should give positive number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mpositive number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should give positive number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mRun completed in 550 milliseconds.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTotal number of tests run: 44[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mSuites: completed 2, aborted 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTests: succeeded 44, failed 0, canceled 0, ignored 0, pending 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAll tests passed.[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mPassed tests:[0m
[0m[[0m[0mdebug[0m] [0m[0m	com.knoldus.calculator.CalculatorTest[0m
[0m[[0m[0mdebug[0m] [0m[0m	com.knoldus.calculatorImplementation.StartCalculatorTest[0m
